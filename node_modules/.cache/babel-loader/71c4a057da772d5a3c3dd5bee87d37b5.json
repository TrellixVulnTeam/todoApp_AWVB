{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gagan/Documents/test/todoApp/src/components/addTodo/addTodo.jsx\";\nimport React, { Component } from 'react';\n\nclass AddTodo extends Component {\n  getCookie(name) {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  addTodo(event) {\n    if (event.key === 'Enter') {\n      // this.props.addTodo({ workName: event.target.value });\n      // event.target.value = null;\n      var csrftoken = this.getCookie('csrftoken');\n      var url = 'http://127.0.0.1:8000/api/task-create/';\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(this.state.activeItem)\n      }).then(response => {\n        console.log(response);\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search\",\n      placeholder: \"Enter todo work \",\n      onKeyDown: event => this.addTodo(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTodo;","map":{"version":3,"sources":["/home/gagan/Documents/test/todoApp/src/components/addTodo/addTodo.jsx"],"names":["React","Component","AddTodo","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","addTodo","event","key","csrftoken","url","fetch","method","headers","body","JSON","stringify","state","activeItem","then","response","console","log","catch","error","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADqC,CAErC;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,WAAON,WAAP;AACH;;AACDU,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACX,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvB;AACA;AAEA,UAAIC,SAAS,GAAG,KAAKf,SAAL,CAAe,WAAf,CAAhB;AAEA,UAAIgB,GAAG,GAAG,wCAAV;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,QAAAA,MAAM,EAAC,MADA;AAEPC,QAAAA,OAAO,EAAC;AACN,0BAAe,kBADT;AAEN,yBAAcJ;AAFR,SAFD;AAMPK,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,UAA1B;AANE,OAAN,CAAL,CAOKC,IAPL,CAOWC,QAAD,IAAe;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OATH,EASKG,KATL,CASW,UAASC,KAAT,EAAe;AACtBH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACD,OAXH;AAaC;AACJ;;AAGLC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,QAA7B;AAAsC,MAAA,WAAW,EAAC,kBAAlD;AAAqE,MAAA,SAAS,EAAElB,KAAK,IAAI,KAAKD,OAAL,CAAaC,KAAb;AAAzF;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA7C2B;;AAkDhC,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n    getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n    addTodo(event) {\n        if (event.key === 'Enter') {\n            // this.props.addTodo({ workName: event.target.value });\n            // event.target.value = null;\n\n            var csrftoken = this.getCookie('csrftoken')\n\n            var url = 'http://127.0.0.1:8000/api/task-create/'\n            fetch(url, {\n                method:'POST',\n                headers:{\n                  'Content-type':'application/json',\n                  'X-CSRFToken':csrftoken,\n                },\n                body:JSON.stringify(this.state.activeItem)\n              }).then((response)  => {\n                  console.log(response)\n              }).catch(function(error){\n                console.log('ERROR:', error)\n              })\n          \n            }\n        }\n    \n\n    render() {\n        return (\n            <input type=\"text\" className=\"search\" placeholder=\"Enter todo work \" onKeyDown={event => this.addTodo(event)} />\n        );\n    }\n}\n\n\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}